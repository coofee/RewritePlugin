plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

apply from: '../gradle/script/rewrite.gradle'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId "com.coofee.rewrite"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            // 使用 dynamic-feature 时，应用的 minifyEnabled 必须设置为true，否则 rewrite 插件对 dynamic-feature 模块 不生效。
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'kotlin/**'
        exclude 'META-INF/*.kotlin_module'
    }

    dynamicFeatures = [':loader']

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // add
    implementation 'com.squareup.okhttp3:okhttp:4.8.1'

    // changed
//    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // removed
    implementation 'com.google.code.gson:gson:2.8.5'

}

afterEvaluate {
    println("android.compileSdkVersion=${android.compileSdkVersion}, android.sdkDirectory=${android.sdkDirectory}")

    Properties props = new Properties()
    props.load(new File(rootProject.rootDir, "local.properties").newReader("utf-8"))
    String sdkDirPath = props.getProperty('sdk.dir')
    println("sdkDirPath=${sdkDirPath}")

    File androidJarFile = new File(sdkDirPath, "platforms/${android.compileSdkVersion}/android.jar")
    println("androidJarFile=${androidJarFile}, exists=${androidJarFile.exists()}")
}